name: Bypass Transformer Pipeline
on:
  push:
    branches: [ "main" ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8
    
      - name: Terraform Apply
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve

      - name: Obter IP da EC2 do Terraform
        id: ec2
        run: |
          cd terraform
          echo "ip=$(terraform output -raw ec2_public_ip)" >> $GITHUB_OUTPUT

      - name: Adicionar IP da EC2 ao inventory.ini
        run: |
          echo "[ec2]" > ansible/inventory.ini
          echo "${{ steps.ec2.outputs.ip }} ansible_user=ec2-user ansible_ssh_private_key_file=bypass-key.pem" >> ansible/inventory.ini

      - name: Obter nomes do S3 do Terraform
        id: s3
        run: |
          cd terraform
          echo "raw=$(terraform output -raw raw_bucket_name)" >> $GITHUB_OUTPUT
          echo "trusted=$(terraform output -raw trusted_bucket_name)" >> $GITHUB_OUTPUT
          echo "client=$(terraform output -raw client_bucket_name)" >> $GITHUB_OUTPUT

      - name: Adicionar chave SSH
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ansible/bypass-key.pem
          chmod 400 ansible/bypass-key.pem

      - name: Obter nomes das tabelas DynamoDB do Terraform
        id: dynamo
        run: |
          cd terraform
          echo "TABLE_CIRCUITO=$(terraform output -raw aws_dynamodb_table_circuito_name)" >> $GITHUB_OUTPUT
          echo "TABLE_SENSOR_METADATA=$(terraform output -raw aws_dynamodb_table_sensor_metadata_name)" >> $GITHUB_OUTPUT
          echo "TABLE_PIEZO_SENSOR_DISTANCIA=$(terraform output -raw aws_dynamodb_table_piezo_sensor_distancia_name)" >> $GITHUB_OUTPUT

      - name: Criar .env
        run: |
          cd ansible
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID}}" > .env
          echo "AWS_SECRET_ACCESS_KEY_ID=${{ secrets.AWS_SECRET_ACCESS_KEY_ID}}" >> .env
          echo "AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN}}" >> .env
          echo "S3_RAW=${{ steps.s3.outputs.raw }}" >> .env
          echo "S3_TRUSTED=${{ steps.s3.outputs.trusted }}" >> .env
          echo "S3_CLIENT=${{ steps.s3.outputs.client }}" >> .env
          echo "DYNAMO_TABLE_CIRCUITO=${{ steps.dynamo.outputs.TABLE_CIRCUITO }}" >> .env
          echo "DYNAMO_TABLE_SENSOR_METADATA=${{ steps.dynamo.outputs.TABLE_SENSOR_METADATA }}" >> .env
          echo "DYNAMO_TABLE_PIEZO_SENSOR_DISTANCIA=${{ steps.dynamo.outputs.TABLE_PIEZO_SENSOR_DISTANCIA }}" >> .env
          cat .env

      - name: Instalar dependencias
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip sshpass
          pip3 install ansible

      - name: Configurar EC2 com Ansible
        run: |
          cd ansible
          export ANSIBLE_HOST_KEY_CHECKING=False
          ansible-playbook -i inventory.ini setup.yml
